import logging
import os
import datetime
import gspread
from google.oauth2.service_account import Credentials
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CallbackContext

# üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
GOOGLE_SHEETS_FOLDER_ID = "1B2OErx-Ch_c-BktZ8KyoFPGJqruAi--4"  # üìÇ ID –ø–∞–ø–∫–∏ Google Drive
SERVICE_ACCOUNT_FILE = "/etc/secrets/google_sheets_creds.json"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google API
creds = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=[
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
])
gc = gspread.authorize(creds)

def create_or_get_sheet():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π Google Sheet –∏–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π."""
    today = datetime.datetime.now().strftime("%Y-%m-%d")
    file_name = f"bot_{today}"

    # üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        sh = gc.open(file_name)
        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É: {file_name}")
        return sh
    except gspread.exceptions.SpreadsheetNotFound:
        pass

    # üìå –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é Google –¢–∞–±–ª–∏—Ü—É
    sh = gc.create(file_name)
    sh.share("telegram-bot-service@telegram-bot-sheets-450709.iam.gserviceaccount.com", perm_type="user", role="writer")

    # üìÇ –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É
    drive_service = creds.with_scopes(["https://www.googleapis.com/auth/drive"])
    file = sh.spreadsheet_id
    gc.request(
        "PATCH",
        f"https://www.googleapis.com/drive/v3/files/{file}",
        json={"parents": [GOOGLE_SHEETS_FOLDER_ID]},
    )

    # ‚úè –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
    worksheet = sh.get_worksheet(0)
    headers = ["–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", "–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã", "–ò–º—è/–ù–∏–∫", "ID —á–∞—Ç–∞", "ID —Å–æ–æ–±—â–µ–Ω–∏—è", "–¢–µ–∫—Å—Ç", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–û —á–µ–º —Ä–µ—á—å"]
    worksheet.append_row(headers)

    logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª: {file_name}")
    return sh

def save_message_to_sheet(update: Update, context: CallbackContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Google Sheets."""
    message = update.message
    chat = message.chat

    # üìå –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    sh = create_or_get_sheet()
    worksheet = sh.get_worksheet(0)

    # üìå –î–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    group_name = chat.title if chat.type in ["group", "supergroup"] else "–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    username = message.from_user.username or message.from_user.full_name
    chat_id = chat.id
    message_id = message.message_id
    text = message.text
    category = ""  # üîπ –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    summary = ""  # üîπ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ

    # üìå –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
    worksheet.append_row([now, group_name, username, chat_id, message_id, text, category, summary])
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ {message_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {sh.title}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    TOKEN = "7820174844:AAEpPab-Wt7iNSO0GkEjEdSKrYpNju3G8Z0"  # üîπ –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–æ–≤
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, save_message_to_sheet))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()